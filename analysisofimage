// Valsava manovre to observe changes, you can see Abdominalwall on AppleStore
extension CIImage {
    var averageColor: Int {
        guard let filter = CIFilter(name: "CIAreaAverage", parameters: [kCIInputImageKey: self, kCIInputExtentKey: self.extent]) else { return 0 }
        guard let outputImage = filter.outputImage else { return 0 }
        var bitmap = [UInt8](repeating: 0, count: 4)
        let context = CIContext(options: [.workingColorSpace: kCFNull!])
        context.render(outputImage, toBitmap: &bitmap, rowBytes: 4, bounds: CGRect(x: 0, y: 0, width: 1, height: 1), format: .RGBA8, colorSpace: nil)
        let red = Int(bitmap[0]); let blue = Int(bitmap[1]);let green = Int(bitmap[2]);let now = NSDate().timeIntervalSinceReferenceDate
        let interval = Float(now - precalc)
        precalc = now
        if interval > 4 || !recording{mean11.removeAll();intervals.removeAll();battiti = 0;return -2}
        var fase = false
        if red <= mean10 { if red < mean10 {medium1.append(Float(mean10-red)/interval)};intervals.append(interval);fase = true} else {
            if red + 20 < blue || red + 20 < green{medium1.removeAll();mean11.removeAll();mean21.removeAll();mean10 = red;return -1}
            print(intervals.count,"disc")
            if intervals.count > minimumfperiod && !fase{
                    var incl : Float = 1
                    var prevalue : Float = 0
                    var index = 0
                    var valu : Float = 0
                    let adjf = (medium1.max() ?? 1)/(medium1.min() ?? 1)
                if adjf != 1 {standardadjf = adjf*Float(medium1.count)}
                            for value in medium1 {if prevalue != 0 {incl = incl*value/(prevalue)/(pow(Float(2),Float(index)/2));index += 1}
                                prevalue = value}
                    if medium1.count != 0 {
                        if index > 0 {valu = ((incl/Float(medium1.count)))/adjf
                            mean11.append(valu)} else {
                                mean11.append((medium1.first!/(pow(Float(2),0.5)))/standardadjf)
                            }
                        if mean11.count > 10 {mean11.removeFirst()}
                        var mediummean11 = Float(0)
                        print(medium1,valu,index)
                        for y in 0...min(9,mean11.count - 1) {mediummean11 += mean11[y]}
                            mediummean11 = mediummean11/Float((mean11.count))
                        battiti += 1
                        mean21.append(mediummean11)
                        var lmedium = Float(0)
                        for values in mean21 {lmedium += values}
                        informationstosave1 = 100000*lmedium/Float(mean21.count)
                        if mean21.count > longmediumcampione {mean21.removeFirst()}
                        informationstosave2 = Int(mediummean11*100000)
                        
                        medium1.removeAll()}
                }
        }
        if red >= smean10 { if red > smean10 {smedium1.append(abs(Float(smean10-red)/interval))};sintervals.append(interval)} else {
            if red + 20 < blue || red + 20 < green{smedium1.removeAll();smean11.removeAll();smean21.removeAll();smean10 = red;return -1}
            print(intervals.count,"asc")
            if sintervals.count > minimumascendingperiod && fase{
                    var incl : Float = 1
                    var prevalue : Float = 0
                    var index = 0
                    var valu : Float = 0
                    let adjf = (smedium1.max() ?? 1)/(smedium1.min() ?? 1)
                if adjf != 1 {sstandardadjf = sadjf*Float(smedium1.count)}
                            for value in smedium1 {if prevalue != 0 {incl = incl*value/(prevalue)/(pow(Float(2),1/Float(index)/2));index += 1}
                                prevalue = value}
                
                    if smedium1.count != 0 {
                        if index > 0 {valu = ((incl/Float(smedium1.count)))/sadjf
                            smean11.append(valu)} else {
                                smean11.append((smedium1.first!/(pow(Float(2),0.5)))/sstandardadjf)
                            }
                        
                        if smean11.count > 10 {smean11.removeFirst()}
                        var smediummean11 = Float(0)
                        print(smedium1,valu,index)
                        for y in 0...min(9,smean11.count - 1) {smediummean11 += smean11[y]}
                        smediummean11 = smediummean11/Float((smean11.count))
                        smean21.append(smediummean11)
                        var lmedium = Float(0)
                        for values in smean21 {lmedium += values}
                        sinformationstosave1 = 100000*lmedium/Float(smean21.count)
                        if smean21.count > longmediumcampione {smean21.removeFirst()}
                        sinformationstosave2 = Int(smediummean11*100000)
                       // text3.text = "long" + String( Int(informationstosave1*100000)) + "\n" + "short" + String(Int(mediummean11*100000)) + "\n" + "camp. \(mean21.count)"
                        smedium1.removeAll()}
                }
        }
        text3.text = "dlong" + String( Int(informationstosave1)) + "\n" + "dshort" + String(Int(informationstosave2)) + "\n" + "along" + String(Int(sinformationstosave1)) + "\n" + "ashort" + String(Int(sinformationstosave2))
        mean10 = red
        smean10 = red
        return medium1.count
    }}
